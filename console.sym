
console.elf:     file format elf64-littleriscv

SYMBOL TABLE:
fffffffff0000000 l    d  .text	0000000000000000 .text
fffffffff0003000 l    d  .bss	0000000000000000 .bss
fffffffff0004000 l    d  .rodata	0000000000000000 .rodata
fffffffff0005000 l    d  .data	0000000000000000 .data
fffffffff0005008 l    d  .got	0000000000000000 .got
fffffffff0005018 l    d  .got.plt	0000000000000000 .got.plt
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 console.c
fffffffff0000000 l     F .text	0000000000000764 run_command
fffffffff0005000 l     O .data	0000000000000004 n.0
0000000000000000 l    df *ABS*	0000000000000000 ctype.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
fffffffff0000afe l     F .text	000000000000000c _out_buffer
fffffffff0000b0a l     F .text	0000000000000002 _out_null
fffffffff0000b0c l     F .text	00000000000000c4 _out_rev
fffffffff0000bd0 l     F .text	00000000000002c4 _ntoa_long
fffffffff0000bd0 l     F .text	00000000000002c4 _ntoa_long_long
fffffffff0000e94 l     F .text	00000000000002f6 _etoa
fffffffff000118a l     F .text	00000000000002f4 _ftoa
fffffffff000147e l     F .text	000000000000000a _out_fct
fffffffff0001488 l     F .text	00000000000006b6 _vsnprintf
fffffffff0001b4c l     F .text	0000000000000008 _out_char
fffffffff00044e8 l     O .rodata	0000000000000050 pow10.0
0000000000000000 l    df *ABS*	0000000000000000 string.c
0000000000000000 l    df *ABS*	0000000000000000 stdio.c
0000000000000000 l    df *ABS*	0000000000000000 event.c
0000000000000000 l    df *ABS*	0000000000000000 sage.c
0000000000000000 l    df *ABS*	0000000000000000 rand.c
fffffffff0003000 l     O .bss	0000000000000008 seed
0000000000000000 l    df *ABS*	0000000000000000 unistd.c
0000000000000000 l    df *ABS*	0000000000000000 
fffffffff0005008 l     O .got	0000000000000000 _GLOBAL_OFFSET_TABLE_
fffffffff0001ee0 g     F .text	000000000000000e putchar
fffffffff0001b3e g     F .text	000000000000000e _putchar
fffffffff00007d2 g     F .text	000000000000006a print_addr
fffffffff0002098 g     F .text	000000000000000a yield
fffffffff0001b54 g     F .text	0000000000000032 printf
fffffffff0002258 g       .bss	0000000000000000 __global_pointer$
fffffffff0001be4 g     F .text	000000000000001e vprintf_
fffffffff0001bb6 g     F .text	000000000000002e snprintf
fffffffff00021dc g     F .text	000000000000001c mknod
fffffffff0001fc6 g     F .text	000000000000000e get_time
fffffffff0001fd4 g     F .text	000000000000000e screen_flush
fffffffff0001cb8 g     F .text	0000000000000078 memcpy
fffffffff000083c g     F .text	0000000000000022 print_str
fffffffff0000a9a g     F .text	000000000000000e islower
fffffffff0000ac6 g     F .text	0000000000000020 tolower
fffffffff00020a2 g     F .text	000000000000000e sleep
fffffffff000219c g     F .text	0000000000000014 rmdir
fffffffff0000ae6 g     F .text	0000000000000018 isspace
fffffffff000213e g     F .text	000000000000001a lseek
fffffffff0001fe2 g     F .text	0000000000000014 get_keyboard_event
fffffffff000200a g     F .text	0000000000000014 path_exists
fffffffff0001f5a g     F .text	000000000000001c pid_get_env
fffffffff000216c g     F .text	0000000000000018 chmod
fffffffff0001c02 g     F .text	0000000000000014 vsnprintf_
fffffffff0002124 g     F .text	000000000000001a write
fffffffff0001c16 g     F .text	0000000000000036 fctprintf
fffffffff0001f76 g     F .text	000000000000001c pid_put_env
fffffffff00020c2 g     F .text	0000000000000018 fstat
fffffffff0002234 g     F .text	0000000000000014 kill
fffffffff00021b0 g     F .text	0000000000000014 chdir
fffffffff0002208 g     F .text	0000000000000018 exec
fffffffff0002220 g     F .text	0000000000000014 wait
fffffffff0002248 g     F .text	0000000000000010 _start
fffffffff000201e g     F .text	0000000000000014 path_is_dir
fffffffff0001f1e g     F .text	0000000000000018 put_env
fffffffff0002062 g     F .text	0000000000000022 rand
fffffffff000210a g     F .text	000000000000001a read
fffffffff0001f92 g     F .text	0000000000000020 screen_draw_rect
fffffffff0000a8c g     F .text	000000000000000e isupper
fffffffff0001e00 g     F .text	0000000000000084 strncmp
fffffffff0000764 g     F .text	000000000000006e print_hello
fffffffff0002158 g     F .text	0000000000000014 unlink
fffffffff0001d30 g     F .text	0000000000000024 memcmp
fffffffff00021f8 g     F .text	0000000000000010 fork
fffffffff0000a50 g     F .text	0000000000000012 isalpha
fffffffff0001e84 g     F .text	000000000000002c strfindchr
fffffffff00020b0 g     F .text	0000000000000012 sbrk
fffffffff0001eee g     F .text	0000000000000018 get_events
fffffffff0001c4c g     F .text	000000000000006c memset
fffffffff000085e g     F .text	00000000000001e4 main
fffffffff0002084 g     F .text	000000000000000a srand
fffffffff0001ed0 g     F .text	0000000000000010 getchar
fffffffff0000a62 g     F .text	000000000000002a isalnum
fffffffff0001ff6 g     F .text	0000000000000014 get_tablet_event
fffffffff0001de2 g     F .text	000000000000001e strcmp
fffffffff0001f46 g     F .text	0000000000000014 next_pid
fffffffff00021c4 g     F .text	0000000000000018 getcwd
fffffffff0001b86 g     F .text	0000000000000030 sprintf
fffffffff0000a42 g     F .text	000000000000000e isdigit
fffffffff0001fb2 g     F .text	0000000000000014 screen_get_dims
fffffffff0002032 g     F .text	0000000000000014 path_is_file
fffffffff000208e g     F .text	000000000000000a exit
fffffffff0001d54 g     F .text	000000000000008e atoi
fffffffff0001eb0 g     F .text	0000000000000020 strlen
fffffffff00020da g     F .text	000000000000001c open
fffffffff0000aa8 g     F .text	000000000000001e toupper
fffffffff0001f06 g     F .text	0000000000000018 get_env
fffffffff0002046 g     F .text	000000000000001c path_list_dir
fffffffff0002184 g     F .text	0000000000000018 mkdir
fffffffff00020f6 g     F .text	0000000000000014 close
fffffffff0001f36 g     F .text	0000000000000010 get_pid


